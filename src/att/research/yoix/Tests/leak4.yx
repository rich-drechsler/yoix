//
// Somewhat useful way to see if various data structures leak. Change
// the type of obj to suit your needs. Restricting the memory used by
// java often helps the output. For example,
//
//	java -ms8m -mx8m ...
//
// starts java with a 8 megabyte heap that won't grow any larger.
//

import yoix.*.*;


Image img = {
    String source = "http://www.yoix.org/imgs/ATTlogo.gif";
};

int counter = (argc > 1) ? atoi(argv[1]) : 25;

while (counter-- != 0) {
    obj = new Frame {
	String  dummy[100000];
	Image backgroundimage = img;

	paint(r) {
	    graphics {
		gsave();
		setrgbcolor(1, 0, 0);
		moveto(100, 100);
		rlineto(100, 0);
		rlineto(0, 50);
		closepath();
		fill();
		grestore();
	    }
	}
    };
obj.visible = 1;
yoix.thread.sleep(1.5);
obj.dispose = 1;
    obj = NULL;		// most objects will now be collected

    yoix.thread.sleep(2);
    yoix.system.gc();
    yoix.system.runFinalization();
    fprintf(stderr, "memory=%d/%d\n", freeMemory(), totalMemory());
}
