//
// An example config file, based on the one for demo1, that tries to make
// the nodes in a graph behave something like the bars in a histogram. You
// undoubtely will need a preprocessing script that combines an xdot graph
// generated by graphviz (e.g., using dot -Txdot -y) with other data that
// contains more information about the nodes in that graph.
//
// These are expensive and should only be used during development, but you
// will need both of them if you want any help tracking problems down.
//
//	DEBUGGING = TRUE;	// to debug tables
//	VM.addtags = TRUE;	// for better Yoix error messages
//

TimeZone TZ = {
    String id = "GMT";
};

final String DATEFORMAT_TIME = "MMM dd HH:mm:ss yyyy";
final String DATEFORMAT_DATE = "MMM dd yyyy";
final Color  COLOREDBYCOLOR = COLORS.connectcolor;
final int    SECSPERDAY = 86400;

CountFormatter(double count) = toString((int)count);
DayFormatter(double time) = date(TZ, DATEFORMAT_TIME, time);
DayFormatter2(double time1, double time2) = date(TZ, abs(time1 - time2) < 1*SECSPERDAY ? DATEFORMAT_TIME : DATEFORMAT_DATE, time1);

DayCountFormatter(double time, int count) {
    return(new Array {date(TZ, DATEFORMAT_TIME, time), toString(count)});
}

//
// Callbacks used to update counter labels...
//

CounterFormatter(DataManager manager) {
    return(toString(manager.selectedcount) + " / " + toString(manager.loadedcount));
}

//
// New version of the function that handles the Y axis ticks and labels.
// The X axis code is handled by YDAT Java code that's accessed when you
// the axismodel field to 2, which automatically happens when 2 is put
// in the EXTRA column of a horizontal axis. We eventually will provide
// something similiar for vertical axes.
//

YAxisLoader(Object arg) {
    double span;
    double step;
    double value;
    String suffix;
    String format;
    Array  suffixes = {"", "", "", "K", "K", "K", "M", "M", "M", "G", "G", "G", "T", "T", "T", "P", "P", "P", "E", "E", "E", "Z", "Z", "Z", "Y", "Y", "Y"};
    Array  ticks;
    Array  labels;
    int    exponent;
    int    n;

    if (arg != NULL) {
        span = arg.axisends[1] - arg.axisends[0];
        if ((exponent = floor(log10(span/2))) > 0) {
            ticks = new Array {pow(10, exponent), 10, 5};
            labels = new Array[21] {"0"};
            suffix = suffixes[exponent];
            step = pow(10, exponent%3);
            format = "%.0f%s";
            for (n = 1, value = step; n < labels@sizeof; n++, value += step) {
                if (value >= 1000) {
                    suffix = suffixes[exponent+1];
                    value = 1;
                    step = 0.1;
                    format = "%.1f%s";
                }
                labels[n] = strfmt(format, value, suffix);
            }
        } else {
            ticks = new Array {1, 1, 1};
            labels = NULL;
        }
        arg.labels = labels;
        arg.ticks = ticks;
    }
}

//
// The rest is pretty standard stuff that's interpreted by table.yx. The
// CALLBACKS table is undoubtedly the hardest because the low level Java
// code is currently the only documentation!!
//

CONFIGVERSION = "4.1";

COLOREDBY = "group";
GRAPHSEPARATOR = " ";		// can't match INPUTSEPARATOR
INPUTSEPARATOR = "|";		// can't match GRAPHSEPARATOR - \007 may be better
////INPUTCOMMENT = "#";
LOCATIONMODE = 2;
PRIMARYLABEL = "Counts";
SECONDARYLABEL = NULL;
SORTEDBY = "main_plot";

LABEL_LONGDURATION = NULL;
LABEL_TIMESHADING = NULL;
LABEL_REVERSESHADING = NULL;
LABEL_EDGES = NULL;
LABEL_NODES = "Nodes";
LABEL_NODEFILL = "Fill";
TIMESHADING = FALSE;
TITLEMODEL = 1;

//
// Small adjustments to the default sizes. HISTOGRAM and PLOTFILTER
// are adjust together, mostly because STARTSCREENS uses the default
// widths.
//

DIMENSIONS.HISTOGRAM.width += 36;
DIMENSIONS.PLOTFILTER.width -= 36;

//
// Spacing used around the main plot.
//

Insets PLOT_PAD = {
    double left = 5;
    double right = 5;
    double top = 3;
    double bottom = 3;
};

//
// Graph settings passed along under the EXTRA column in GRAPHS table.
//

Dictionary GRAPH_EXTRA = {
    int fillmodel = BOTTOM;
    int selectflags = DATA_GRAPH_NODE;
};

TRANSLATORS = new Dictionary {
    Dictionary weekday_order[] = {
	"Sun", "1",
	"Mon", "2",
	"Tue", "3",
	"Wed", "4",
	"Thu", "5",
	"Fri", "6",
	"Sat", "7",
    };
};

DATAFIELDS = new Array {
//
// NAME             TYPE           INDEX  COUNTER  UNIXTIME   TRANSLATOR     GENERATOR
// ----             ----           -----  -------  --------   ----------     ---------
   "day",           DATA_STRING,     0,   FALSE,   FALSE,     NULL,           NULL,
   "category",      DATA_STRING,     1,   FALSE,   FALSE,     NULL,           NULL,
   "group",         DATA_STRING,     2,   FALSE,   FALSE,     NULL,           NULL,
   "value1",        DATA_INTEGER,    3,   FALSE,   FALSE,     NULL,           NULL,
   "value2",        DATA_INTEGER,    4,   FALSE,   FALSE,     NULL,           NULL,
   "count",         DATA_INTEGER,    5,   FALSE,   FALSE,     NULL,           NULL,

   "node1",         DATA_STRING,     6,   FALSE,   FALSE,     NULL,           NULL,
   "edge",          DATA_STRING,     7,   FALSE,   FALSE,     NULL,           NULL,
   "node2",         DATA_STRING,     8,   FALSE,   FALSE,     NULL,           NULL,

   "unixtime",      DATA_CALL,      -1,   FALSE,   TRUE,      NULL,           new Array {BUILTIN_PARSEDATE, TZ, "day", "MM/dd/yy"},
   "weekday",       DATA_CALL,      -1,   FALSE,   NULL,      NULL,           new Array {BUILTIN_DATE, TZ, "EE", "unixtime"}
};

HISTOGRAMS = new Array {
//
// NAME            MENULABEL       PRIMARY         SECONDARY   DIVERSITY  AUTOREADY  SPAN   SORTBY             EXTRA
// ----            ---------       -------         ---------   ---------  ---------  ----   ------             -----
   "category",     "Category",     "category",     NULL,       NULL,      FALSE,      0,    SORTBY_TEXT,       NULL,
   "group",        "Group",        "group",        NULL,       NULL,      FALSE,      0,    SORTBY_TEXT,       NULL,
   "value1",       "Value 1",      "value1",       NULL,       NULL,      FALSE,      0,    SORTBY_NUMBER,     NULL,
   "value2",       "Value 2",      "value2",       NULL,       NULL,      FALSE,      0,    SORTBY_NUMBER,     NULL,

   "weekday",      "Weekday",      "weekday",      NULL,       NULL,      FALSE,      0,    "weekday_order",   NULL,
};

SWEEPTABLES = new Array {
//
// NAME            MENULABEL        REORDER  RESIZE   EXTRA  COLUMNS
// ----            ---------        -------  ------   -----  -------
   "data_detail",  "Data Detail",   TRUE,    TRUE,    NULL,  new Array {
        //
        // DATAFIELD        LABEL           SPAN  ALIGNMENT  TYPE            ATTRIBUTES          EXTRA
        // ---------        -----           ----  ---------  ----            ----------          -----
	   "unixtime",      "Date",          12,  LEFT,      DATE_TYPE,      "MM/dd/yy",         NULL,
	   "category",      "Category",      10,  CENTER,    STRING_TYPE,    NULL,               NULL,
	   "group",         "Group",         10,  CENTER,    STRING_TYPE,    NULL,               NULL,
	   "value1",        "Value 1",       10,  RIGHT,     STRING_TYPE,    NULL,               NULL,
	   "value2",        "Value 2",       10,  RIGHT,     STRING_TYPE,    NULL,               NULL,
	   "count",         "Count",         10,  RIGHT,     INTEGER_TYPE,   NULL,               NULL,
    },
};

Array GRAPH_FIELDS = {"node1", "edge", "node2"};

GRAPHS = new Array {
//
// NAME           MENULABEL  PRIMARY        SECONDARY  COLOREDBY     AUTOREADY  LINEWIDTH    BORDER  INSETS  PAD  PALETTE   EXTRA
// ----           ---------  -------        ---------  ---------     ---------  ---------    ------  ------  ---  -------   -----
   "main_graph",  "Graph",   GRAPH_FIELDS,  NULL,      "main_graph", FALSE,     2*LINEWIDTH,   2,      2,    18,  NULL,     GRAPH_EXTRA,
};

STACKS = new Array {
//
// NAME          MENULABEL  VISIBLE  OWNER  XVALUE       YVALUE       FILTER          AUTOREADY  ANCHOR  BORDER  INSETS  PAD        EXTRA
// ----          ---------  -------  -----  ------       ------       ------          ---------  ------  ------  ------  ---        -----
   "main_plot",  NULL,      TRUE,    NULL,  "unixtime",  "count",     "data_detail",  FALSE,     SOUTH,  2,      2,      PLOT_PAD,  NULL,
};

AXES = new Array {
//
// NAME            MENULABEL  VISIBLE  OWNER          ROWS  COLUMNS  ANCHOR  INVERTED  TICKINTERVALS  TICKLABELS  EXTRA
// ----            ---------  -------  -----          ----  -------  ------  --------  -------------  ----------  -----
   "main_xaxis",   NULL,      TRUE,    "main_plot",    1,     1,     NORTH,  FALSE,    NULL,          NULL,       2,
   "main_yaxis",   NULL,      TRUE,    "main_plot",    1,     6,     EAST,   FALSE,    NULL,          NULL,       NULL,
};

LABELS = new Array {
//
// NAME                  MENULABEL  VISIBLE  OWNER          ROWS  COLUMNS  ALIGNMENT  FONT     FOREGROUND          TEXT
// ----                  ---------  -------  -----          ----  -------  ---------  ----     ----------          ----
   "counter_label",      NULL,      TRUE,    "main_plot",    1,    60,     RIGHT,     NULL,    NULL,               NULL,
   "info_label",         NULL,      TRUE,    "main_plot",    1,    60,     LEFT,      NULL,    COLORS.sweepcolor,  NULL,
   "start_label",        NULL,      TRUE,    "main_plot",    1,    25,     LEFT,      NULL,    NULL,               NULL,
   "end_label",          NULL,      TRUE,    "main_plot",    1,    25,     RIGHT,     NULL,    NULL,               NULL,
};

PANELS = new Array {
//
// NAME           MENULABEL  VISIBLE    OWNER  WIDTH  HEIGHT  BACKGROUND    LAYOUT
// ----           ---------  -------    -----  -----  ------  ----------    ------

   "main_panel",  NULL,      TRUE,      NULL,    0,      0,   NULL,         new Array {
        //
        // NAME            GRIDX  GRIDY  GRIDWIDTH  GRIDHEIGHT  WEIGHTX  WEIGHTY   IPADX     IPADY     FILL      ANCHOR   INSETS       BACKGROUND
        // ----            -----  -----  ---------  ----------  -------  -------   -----     -----     ----      ------   ------       ----------
           NULL,             0,     0,       1,          1,         0,       0,    72.0/8,   72.0/8,   NONE,     CENTER,  NULL,        NULL,
           "counter_label",  8,     1,       1,          1,         0,       0,    0,        0,        NONE,     EAST,    NULL,        NULL,
           "main_yaxis",     2,     3,       1,          1,         0,       0,    0,        0,        BOTH,     CENTER,  "main_plot", NULL,
           "main_plot",      3,     3,       6,          1,       100,     100,    0,        0,        BOTH,     CENTER,  NULL,        NULL,
           "main_xaxis",     3,     7,       6,          1,       100,       0,    0,        0,        BOTH,     CENTER,  "main_plot", NULL,
           "start_label",    3,     8,       1,          1,         0,       0,    0,        0,        NONE,     WEST,    NULL,        NULL,
           "end_label",      8,     8,       1,          1,         0,       0,    0,        0,        NONE,     EAST,    NULL,        NULL,
           "info_label",     3,     9,       6,          1,       100,       0,    0,        0,        BOTH,     CENTER,  NULL,        NULL,
           NULL,             10,    10,      1,          1,         0,       0,    72.0/8,   72.0/32,  NONE,     CENTER,  NULL,        NULL,
   },
};

CALLBACKS = new Array {
//
// OWNER              STATE          FORMATTER                LABEL                 CALLBACK
// -----              ------         ----------               -----                 --------
   "main_xaxis",      "SELECT",      DayFormatter,            "info_label",         NULL,
   "main_xaxis",      "SETSTART",    DayFormatter2,           "start_label",        NULL,
   "main_xaxis",      "SETEND",      DayFormatter2,           "end_label",          NULL,
   "main_yaxis",      "SELECT",      CountFormatter,          "info_label",         NULL,
   "main_yaxis",      "SETEND",      NULL,                    NULL,                 YAxisLoader,
   "main_plot",       "POINT",       DayCountFormatter,       "info_label",         NULL,
   "main_plot",       "SWEEP",       DayCountFormatter,       "info_label",         NULL,
   "main_plot",       "SELECT",      DayCountFormatter,       "info_label",         NULL,

   "datamanager",     "LOAD",        CounterFormatter,        "counter_label",      NULL,
   "datamanager",     "UPDATE",      CounterFormatter,        "counter_label",      NULL,

   //
   // There's much more we can do here, but you'll definitely need help!!
   //
};

//
// Ugly positioning and sizing, but it wouldn't be hard to simplify. First
// two numbers position the sceen; last two determine the screen's size.
//

STARTSCREENS = new Array {
    "main_panel",
	0,
	0,
	VM.screen.width - DIMENSIONS.HISTOGRAM.width - 2*SEPARATION,
	0.4*VM.screen.height - SEPARATION,
    "group",
	VM.screen.width - DIMENSIONS.HISTOGRAM.width - SEPARATION,
	0,
	DIMENSIONS.HISTOGRAM.width,
	0,
    "main_graph",
	0,
	0.4*VM.screen.height + SEPARATION,
	0.6*VM.screen.height - 72.0/2,
	0.6*VM.screen.height - 72.0/2,
    "data_detail",
	0.6*VM.screen.height - 72.0/2 + SEPARATION,
	0.4*VM.screen.height + SEPARATION,
	VM.screen.width - DIMENSIONS.HISTOGRAM.width - 2*SEPARATION - 0.6*VM.screen.height + 72.0/2,
	0.6*VM.screen.height - 72.0/2,
};

