//
// Simple example that puts a ColorCube in a BranchGroup that's rotated
// around its x axis.
//

import yoix.j3d.*;
import yoix.*.*;

Frame f = {
    Array layout = {
	new Canvas3D {
	    String tag = "$_canvas";

	    //
	    // The view field in a Canvas3D can be a ViewPlatform or
	    // a VirtualUniverse. When it's a VirtualUniverse you get
	    // the ViewPlatform built for you and it's automatically
	    // added to the tagged array under the name "viewplatform".
	    // Name probably should be changed - it's TAG_VIEWPLATFORM
	    // which is defined in Constants.java.
	    //
	    VirtualUniverse view = {
		//
		// Originally let canvas's background field control the
		// background color and background image, but that didn't
		// seem right with multiple canvases. Moved the background
		// code to VirtualUniverse and disabled the stuff in our
		// Canvas3D.
		//

		Color background = Color.cyan;
		Image backgroundimage = NULL;

		//
		// Take a look at BodyVirtualUniverse.setLayout() to
		// see what's accepted here. You use tagged dictionary
		// in a VirtualUniverse to access objects that are
		// defined in layout, but only objects with tags end
		// up in tagged, so it's not quite like components.
		// Also currently don't have anything like root, but
		// I think that will change - suspect that all tagged
		// should be able to find their universe.
		//
		Array layout = {
		    new BranchGroup {
			String tag = "$_branch";

			Transform3D transform = {
			    //
			    // Added code to YoixPointerActive to make sure
			    // initialized() (if it exists) is called right
			    // before the declaration ends. Makes it easy to
			    // initialize transforms using builtins and it
			    // should work for all YoixPointerActive objects.
			    //
			    initializer() {
				setToRotationX(30);
			    }
			};

			Array layout = {
			    new ColorCube {
				String tag = "$_cc";
				double scale = 0.4;
			    },
			};
		    },
		};
	    };
	}, CENTER,
    };
};

f.visible = TRUE;

//
// Just an example - using the "view" field to get to tagged in the
// universe, but that will eventually change because "view" won't
// always be a universe.
//

fprintf(stderr, "content.tagged=%O\n", f.components.$_canvas.universe.tagged);
fprintf(stderr, "content.$_branch.tagged=%O\n", f.components.$_canvas.universe.tagged.$_branch.tagged);

