#!<_PERL_PATH_> -w
#
# Trivial script that reads one line from standard input and writes an
# encrypted version of that line, suitable for use in our password file,
# on standard output.
#

use strict;
use vars qw(<_PERL_GLOBAL_VARIABLES_>);

$SERVERHOMEDIR="<_SERVER_HOMEDIR_DQ_>";
$SERVERSETUP=$SERVERHOMEDIR . "/etc/<_BETA_PREFIX_DQ_><_ACRONYM_LOWER_DQ_>_rc.pl";

if (! -r "$SERVERSETUP") {
    print "STATUS=internalerror\n";
    print "REASON=server+cannot+find+or+read+setup+file\n";
    exit(1);
}
require $SERVERSETUP;

my $arg;
my $salt = PickSalt();

while (@ARGV && $ARGV[0] =~ /^-/) {
    $arg = shift;
    if ($arg =~ /^-s/) {
	$arg =~ s/^-s//;
	if (length($arg) >= 2) {
	    ##
	    ## Probably should also verify that characters really
	    ## do come from KEYSET.
	    ##
	    $salt = $arg;
	} else {
	    printf(STDERR "$0: salt must be at least 2 characters");
	    exit(1);
	}
    } else {
	printf(STDERR "$0: invalid option $arg\n");
	exit(1);
    }
}

if (defined($_ = <>)) {
    chomp;
    print(STDOUT crypt($_, $salt) . "\n");
}

