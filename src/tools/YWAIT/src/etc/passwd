#
# Example password file - lines can be comments, blank lines, or user
# descriptions that are a single line of colon separated fields. The
# scripts run on the server only look at the first seven fields. This
# is also a heavily used file, so you evenutally may want to remove
# some of these comments. The fields are:
#
#    Field 1:  login name
#    Field 2:  password
#    Field 3:  group name
#    Field 4:  start time
#    Field 5:  end time
#    Field 6:  command set
#    Field 7:  IP address
#    Field 8:  real name
#    Field 9:  real email address
#    Field 10: extra stuff (no colons)
#
# The password field should be an encrypted password, the word "none"
# (no login but commands listed in field 6 are accepted), "disabled"
# (or "*") if the entry is disabled, or empty if the password should
# be filled in when the user logs in for the first time.
#
# The group name is required. There's no official list of valid group
# names, but "shared", "default", and "admin" are sometimes used. The
# "shared" group imposes a few retrictions, like not being able to
# change the password once its been set, that may be expanded in the
# future.
#
# The next two fields are unixtimes that restrict when the entry will
# work. The current time must lie between the start and end times or
# the user will not be allowed to login. End times that are zero never
# expire. A negative end time is reset to the current time plus the
# absolute value of end time after the user successfully logs in.
#
# The command set can be empty or "*", which means no restrictions
# on what can be done, but it can also be a comma separated list of
# the "commands" that the user can run (see ywait_exec.pl).
#
# The IP address field can be a comma or space separated list of the
# IP addresses that can restrict the systems the user can use.
#
#####################################################################
#
# An entry with "*" as the login name (i.e., field 1), "none" as the
# password (field 2), and group (i.e., field 3) that's not "default"
# or "admin" is special and means every login name will be accepted
# and a passwd file entry and home directory will be created for each
# new user. This mechanism is only enabled when the ValidateUser()
# function defined in the rc file is called with the "-e" option AND
# a "magic" entry is defined in this file.
#
# The default implementation of the validation subroutine defined in
# the subs directory can call ValidateUser() with the -e option, but
# nothing special happens if there's no "magic" entry in this file.
# It's occasionally convenient, but it's usually not the way to run,
# so think hard before adding a "magic" entry to this file!!!
#
######################################################################

guest::shared:0:0:::Guest Login::
