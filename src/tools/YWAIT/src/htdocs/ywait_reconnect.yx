//
// JDialog that lets expired sessions continue.
//

import yoix.*.*;

Dictionary Global = argv[1];

String ReconnectMessage = "\
Your " + Global.ACRONYM + " session has expired. To reactivate your session \
with no loss of data, press 'OK'.  Press 'Quit' to end your session.";

Builder(String name, Array args) {

    JDialog screen = {
	Dimension size = NULL;
	Insets    border = Global.GetLoginScreenInsets();
	Font      font = Global.GetPreferredLabelFont();
	int       modal = TRUE;
	int       opaque = TRUE;

	////////////////////////////
	//
	// Screen Variables
	//
	////////////////////////////

	String screenbuilder = global.argv[0];
	String screenname = name;
	String screentitle = NULL;
	Object anchorpoint = NULL;
	Color  screencolor = NULL;
	int    anchorstyle = AUTOMATIC;
	int    screenanchor = CENTER;
	int    initialized = FALSE;
	int    disposeonclose = TRUE;
	int    savestate = FALSE;   // save screen-specific info within session
	int    retainstate = FALSE; // save screen-class info across sessions
	int    reloadargs = FALSE;

	////////////////////////////
	//
	// Screen Layout
	//
	////////////////////////////

	GridBagLayout layoutmanager;

	Array layout = {
	    new JLabel {
		String text = Global.ACRONYM + " " + Global.ServerType + " SYSTEM RECONNECT";
		Color  foreground = Global.GetPreferredWarningColor();
		Font   font = Global.GetPreferredHeadingFont();
		int    alignment = CENTER;
	    },
	    new GridBagConstraints {
		int gridwidth = REMAINDER;
		int weightx = 1;
		int fill = HORIZONTAL;
		int anchor = CENTER;
	    },

	    new JTextCanvas {
		String tag = "$_message";
		String text = ReconnectMessage;
		Font   font = Global.GetPreferredMessageFont();
		int    wrap = TRUE;
		int    mode = WORDMODE;
		int    state = TRUE;
		Insets border = Global.GetLargeShadowInsets();
		Insets insets = Global.GetQualifiedInsets(72.0/8, "TBLR");

		Dimension preferredsize = {
		    double width = 5.0*72.0;
		    double height = 0;
		};
	    },
	    new GridBagConstraints {
		int    gridwidth = REMAINDER;
		int    weightx = 1;
		int    weighty = 1;
		int    fill = BOTH;
		Insets insets = Global.GetQualifiedInsets(72.0/4, "T");
	    },

	    new JPanel {
		GridBagLayout layoutmanager;
		Array layout = {
		    new JLabel {
			String text = Global.LoginLabel;
			Font   font = Global.GetPreferredLabelFont();
			int    alignment = RIGHT;
		    },
		    new GridBagConstraints {
			int gridx = 1;
			int gridy = 1;
			int anchor = RIGHT;
		    },

		    new JTextField {
			String tag = "$_username";
			Color  background = Global.GetPreferredTextBackground();
			Color  foreground = Global.GetPreferredTextForeground();
			String text = Global.UserName;
			Insets insets = Global.GetTextFieldInsets();
			int    opaque = TRUE;
			int    columns = 10;
			int    edit = FALSE;
			int    enabled = FALSE;
			int    autotrim = TRUE;
		    },
		    new GridBagConstraints {
			int gridx = 2;
			int gridy = 1;
			int anchor = LEFT;
		    },
		};
	    },
	    new GridBagConstraints {
		int    gridwidth = REMAINDER;
		int    anchor = CENTER;
		Insets insets = Global.GetQualifiedInsets(72.0/4, "T");
	    },

	    new JLabel {
		String tag = "$_failed";
		Font   font = Global.GetPreferredMessageFont();
		Color  foreground = Global.GetPreferredWarningColor();
		int    alignment = CENTER;
	    },
	    new GridBagConstraints {
		int    gridwidth = REMAINDER;
		int    weightx = 1;
		int    fill = HORIZONTAL;
		int    anchor = CENTER;
		Insets insets = Global.GetQualifiedInsets(72.0/4, "TB");
	    },

	    new JPanel {
		GridLayout layoutmanager;
		Array layout = {
		    new JButton {
			String text = "OK";
			Font   font = Global.GetPreferredButtonFont();
			int    requestfocus = TRUE;

			focusGained(e) {
			    root.components.$_failed.text = "";
			}

			actionPerformed(e) {
			    String username = Global.UserName;
			    String password = "<system>";
			    String groupname = Global.GroupName;

			    requestfocus = FALSE;
			    if (Global.RunLoginCommand(root, "RECONID", username, password, groupname) == NULL || Global.Expired) {
				root.components.$_failed.text = "Reconnect failed - try again";
				sleep(2);
			    } else Global.AltQueueCommand(root, &root.HideScreen);
			}
		    },

		    new JButton {
			String text = "Quit";
			Color  foreground = Global.GetPreferredWarningColor();
			Font   font = Global.GetPreferredButtonFont();

			actionPerformed(e) {
			    enabled = FALSE;
			    Global.Quit(0);
			}
		    },
		};
	    },
	    new GridBagConstraints {
		int gridwidth = REMAINDER;
		int anchor = CENTER;
	    },

	    new JLabel {
		String text = Global.ProprietaryLabel;
		Font   font = Global.GetPreferredProprietaryFont();
		int    alignment = CENTER;
	    },
	    new GridBagConstraints {
		int    gridwidth = REMAINDER;
		int    anchor = CENTER;
		Insets insets = Global.GetQualifiedInsets(72.0/32, "T");
	    },
	};

	////////////////////////////
	//
	// Screen Functions
	//
	////////////////////////////

	ClearScreen() {
	    components.$_failed.text = "";
	    components.$_password.text = "";
	}

	HideScreen() {
	    Global.HideScreen(this);
	}

	LoadScreen() {
	    components.$_username.text = Global.UserName;
	}

	////////////////////////////
	//
	// Miscellaneous Functions
	//
	////////////////////////////
    };

    return(screen);
}

return(Builder);
